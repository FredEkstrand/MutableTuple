<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MutableTuple</name>
    </assembly>
    <members>
        <member name="T:Ekstrand.ITuple">
            <summary>
            Helper so we can call some MTuple methods recursively without knowing the underlying types.
            </summary>
        </member>
        <member name="M:Ekstrand.ITuple.ToString(System.Text.StringBuilder)">
            <summary>
            Returns a string that represents the value of this Mutable Tuple instance. 
            </summary>
            <param name="sb">StringBuilder object</param>
            <returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.ITuple.GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
            Calculates the hash code for the current Mutable Tuple from its elements hash code value.
            </summary>
            <param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:Ekstrand.ITuple.Size">
            <summary>
            Return Mutable Tuple number of elements. 
            </summary>
        </member>
        <member name="T:Ekstrand.MTuple">
            <summary>
            Provides static methods for creating mutable tuple objects. 
            </summary>
        </member>
        <member name="M:Ekstrand.MTuple.Create``1(``0)">
            <summary>
            Creates a new 1-mutable tuple, or singleton.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``2(``0,``1)">
            <summary>
            Creates a new 2-mutable tuple, or pair.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``3(``0,``1,``2)">
            <summary>
            Creates a new 3-mutable tuple, or triple.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T3">T3: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <param name="item3">Type T3: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2, item3).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``4(``0,``1,``2,``3)">
            <summary>
            Creates a new 4-mutable tuple, or quadruple.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T3">T3: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T4">T4: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <param name="item3">Type T3: The value of the only component of the mutable tuple.</param>
            <param name="item4">Type T4: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2, item3, item4).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new 5-mutable tuple, or quintuple.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T3">T3: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T4">T4: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T5">T5: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <param name="item3">Type T3: The value of the only component of the mutable tuple.</param>
            <param name="item4">Type T4: The value of the only component of the mutable tuple.</param>
            <param name="item5">Type T5: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2, item3, item4, item5).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new 6-mutable tuple, or sextuple.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T3">T3: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T4">T4: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T5">T5: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T6">T6: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <param name="item3">Type T3: The value of the only component of the mutable tuple.</param>
            <param name="item4">Type T4: The value of the only component of the mutable tuple.</param>
            <param name="item5">Type T5: The value of the only component of the mutable tuple.</param>
            <param name="item6">Type T6: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2, item3, item4, item5, item6).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new 7-mutable tuple, or septuple.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T3">T3: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T4">T4: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T5">T5: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T6">T6: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T7">T7: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <param name="item3">Type T3: The value of the only component of the mutable tuple.</param>
            <param name="item4">Type T4: The value of the only component of the mutable tuple.</param>
            <param name="item5">Type T5: The value of the only component of the mutable tuple.</param>
            <param name="item6">Type T6: The value of the only component of the mutable tuple.</param>
            <param name="item7">Type T7: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2, item3, item4, item5, item6, item7).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates a new 8-mutable tuple, or octuple.
            </summary>
            <typeparam name="T1">T1: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T2">T2: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T3">T3: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T4">T4: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T5">T5: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T6">T6: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T7">T7: The type of the only component of the mutable tuple.</typeparam>
            <typeparam name="T8">T8: The type of the only component of the mutable tuple.</typeparam>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
            <param name="item2">Type T2: The value of the only component of the mutable tuple.</param>
            <param name="item3">Type T3: The value of the only component of the mutable tuple.</param>
            <param name="item4">Type T4: The value of the only component of the mutable tuple.</param>
            <param name="item5">Type T5: The value of the only component of the mutable tuple.</param>
            <param name="item6">Type T6: The value of the only component of the mutable tuple.</param>
            <param name="item7">Type T7: The value of the only component of the mutable tuple.</param>
            <param name="item8">Type T8: The value of the only component of the mutable tuple.</param>
            <returns>A tuple whose value is (item1, item2, item3, item4, item5, item6, item7, item8).</returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32)">
            <summary>
            HashCodeCombiner
            </summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32,System.Int32)">
            <summary>HashCodeCombiner</summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h3"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>HashCodeCombiner</summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h3"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h4"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>HashCodeCombiner</summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h3"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h4"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h5"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>HashCodeCombiner</summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h3"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h4"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h5"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h6"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>HashCodeCombiner</summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h3"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h4"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h5"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h6"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h7"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple.CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>HashCodeCombiner</summary>
            <param name="h1"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h2"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h3"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h4"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h5"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h6"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h7"><para>A 32-bit signed integer hash code.</para></param>
            <param name="h8"><para>A 32-bit signed integer hash code.</para></param>
            <returns><para>A 32-bit signed integer hash code combined from the given 32-bit singed integers.</para></returns>
        </member>
        <member name="T:Ekstrand.MTuple`1">
            <summary>
            Creates a new 1-mutable tuple, or singleton.
            </summary>
            <typeparam name="T1">The value of the only component of the mutable tuple.</typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`1.Item1">
            <summary>
            Gets/Sets the value of the Mutable Tuple object's single component.
            </summary>
        </member>
        <member name="M:Ekstrand.MTuple`1.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the Mutable Tuple&lt;T1&gt; class.
            </summary>
            <param name="item1">Type T1: The value of the only component of the mutable tuple.</param>
        </member>
        <member name="M:Ekstrand.MTuple`1.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.System#IComparable#CompareTo(System.Object)">
            <!-- No matching elements were found for the following include tag --><include file="..\Comments\CompareToMethod.xml" path="Comments/CompleteDoc3/*" />   
        </member>
        <member name="M:Ekstrand.MTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`1.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`1.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`2">
            <summary>
            Creates a new 2-mutable tuple, or pair.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`2.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`2.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`2.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`2.#ctor(`0,`1)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`2.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`2.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`2.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`3">
            <summary>
            Creates a new 3-mutable tuple, or triple.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
            <typeparam name="T3"><para>
    The type of the mutable tuple's third component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`3.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`3.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`3.Item3">
            <summary>
     Get/Set the value of the Mutable Tuple object's third component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`3.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`3.#ctor(`0,`1,`2)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
            <param name="item3"><para>
    The type of the mutable tuple's third component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`3.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`3.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`3.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`4">
            <summary>
            Creates a new 4-mutable tuple, or quadruple.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
            <typeparam name="T3"><para>
    The type of the mutable tuple's third component.
    </para></typeparam>
            <typeparam name="T4"><para>
    The type of the mutable tuple's forth component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`4.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`4.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`4.Item3">
            <summary>
     Get/Set the value of the Mutable Tuple object's third component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`4.Item4">
            <summary>
     Get/Set the value of the Mutable Tuple object's forth component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`4.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`4.#ctor(`0,`1,`2,`3)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
            <param name="item3"><para>
    The type of the mutable tuple's third component.
    </para></param>
            <param name="item4"><para>
    The type of the mutable tuple's forth component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`4.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`4.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`4.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`5">
            <summary>
            Creates a new 5-mutable tuple, or quintuple.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
            <typeparam name="T3"><para>
    The type of the mutable tuple's third component.
    </para></typeparam>
            <typeparam name="T4"><para>
    The type of the mutable tuple's forth component.
    </para></typeparam>
            <typeparam name="T5"><para>
    The type of the mutable tuple's fifth component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`5.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`5.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`5.Item3">
            <summary>
     Get/Set the value of the Mutable Tuple object's third component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`5.Item4">
            <summary>
     Get/Set the value of the Mutable Tuple object's forth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`5.Item5">
            <summary>
     Get/Set the value of the Mutable Tuple object's fifth component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`5.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
            <param name="item3"><para>
    The type of the mutable tuple's third component.
    </para></param>
            <param name="item4"><para>
    The type of the mutable tuple's forth component.
    </para></param>
            <param name="item5"><para>
    The type of the mutable tuple's fifth component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`5.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`5.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`5.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`6">
            <summary>
            Creates a new 6-mutable tuple, or sextuple.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
            <typeparam name="T3"><para>
    The type of the mutable tuple's third component.
    </para></typeparam>
            <typeparam name="T4"><para>
    The type of the mutable tuple's forth component.
    </para></typeparam>
            <typeparam name="T5"><para>
    The type of the mutable tuple's fifth component.
    </para></typeparam>
            <typeparam name="T6"><para>
    The type of the mutable tuple's sixth component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`6.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`6.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`6.Item3">
            <summary>
     Get/Set the value of the Mutable Tuple object's third component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`6.Item4">
            <summary>
     Get/Set the value of the Mutable Tuple object's forth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`6.Item5">
            <summary>
     Get/Set the value of the Mutable Tuple object's fifth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`6.Item6">
            <summary>
     Get/Set the value of the Mutable Tuple object's sixth component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`6.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
            <param name="item3"><para>
    The type of the mutable tuple's third component.
    </para></param>
            <param name="item4"><para>
    The type of the mutable tuple's forth component.
    </para></param>
            <param name="item5"><para>
    The type of the mutable tuple's fifth component.
    </para></param>
            <param name="item6"><para>
    The type of the mutable tuple's sixth component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`6.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`6.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`6.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`7">
            <summary>
            Creates a new 7-mutable tuple, or septuple.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
            <typeparam name="T3"><para>
    The type of the mutable tuple's third component.
    </para></typeparam>
            <typeparam name="T4"><para>
    The type of the mutable tuple's forth component.
    </para></typeparam>
            <typeparam name="T5"><para>
    The type of the mutable tuple's fifth component.
    </para></typeparam>
            <typeparam name="T6"><para>
    The type of the mutable tuple's sixth component.
    </para></typeparam>
            <typeparam name="T7"><para>
    The type of the mutable tuple's seventh component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item3">
            <summary>
     Get/Set the value of the Mutable Tuple object's third component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item4">
            <summary>
     Get/Set the value of the Mutable Tuple object's forth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item5">
            <summary>
     Get/Set the value of the Mutable Tuple object's fifth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item6">
            <summary>
     Get/Set the value of the Mutable Tuple object's sixth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`7.Item7">
            <summary>
     Get/Set the value of the Mutable Tuple object's seventh component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`7.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
            <param name="item3"><para>
    The type of the mutable tuple's third component.
    </para></param>
            <param name="item4"><para>
    The type of the mutable tuple's forth component.
    </para></param>
            <param name="item5"><para>
    The type of the mutable tuple's fifth component.
    </para></param>
            <param name="item6"><para>
    The type of the mutable tuple's sixth component.
    </para></param>
            <param name="item7"><para>
    The type of the mutable tuple's seventh component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`7.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`7.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`7.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
        <member name="T:Ekstrand.MTuple`8">
            <summary>
            Creates a new 8-mutable tuple, or octuple.
            </summary>
            <typeparam name="T1"><para>
    The type of the mutable tuple's first component.
    </para></typeparam>
            <typeparam name="T2"><para>
    The type of the mutable tuple's second component.
    </para></typeparam>
            <typeparam name="T3"><para>
    The type of the mutable tuple's third component.
    </para></typeparam>
            <typeparam name="T4"><para>
    The type of the mutable tuple's forth component.
    </para></typeparam>
            <typeparam name="T5"><para>
    The type of the mutable tuple's fifth component.
    </para></typeparam>
            <typeparam name="T6"><para>
    The type of the mutable tuple's sixth component.
    </para></typeparam>
            <typeparam name="T7"><para>
    The type of the mutable tuple's seventh component.
    </para></typeparam>
            <typeparam name="TRest"><para>
    The type of the mutable tuple's TRest component.
    </para></typeparam>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item1">
            <summary>
     Get/Set the value of the Mutable Tuple object's first component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item2">
            <summary>
     Get/Set the value of the Mutable Tuple object's second component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item3">
            <summary>
     Get/Set the value of the Mutable Tuple object's third component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item4">
            <summary>
     Get/Set the value of the Mutable Tuple object's forth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item5">
            <summary>
     Get/Set the value of the Mutable Tuple object's fifth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item6">
            <summary>
     Get/Set the value of the Mutable Tuple object's sixth component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Item7">
            <summary>
     Get/Set the value of the Mutable Tuple object's seventh component.
    </summary>
        </member>
        <member name="P:Ekstrand.MTuple`8.Rest">
            <summary>
     Get/Set the value of the Mutable Tuple object's TRest component.
    </summary>
        </member>
        <member name="M:Ekstrand.MTuple`8.#ctor">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
        </member>
        <member name="M:Ekstrand.MTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
        Initializes a new instance of the Mutable Tuple class.
     </summary>
            <param name="item1"><para>
    The type of the mutable tuple's first component.
    </para></param>
            <param name="item2"><para>
    The type of the mutable tuple's second component.
    </para></param>
            <param name="item3"><para>
    The type of the mutable tuple's third component.
    </para></param>
            <param name="item4"><para>
    The type of the mutable tuple's forth component.
    </para></param>
            <param name="item5"><para>
    The type of the mutable tuple's fifth component.
    </para></param>
            <param name="item6"><para>
    The type of the mutable tuple's sixth component.
    </para></param>
            <param name="item7"><para>
    The type of the mutable tuple's seventh component.
    </para></param>
            <param name="rest"><para>
    The type of the mutable tuple's rest component.
    </para></param>
        </member>
        <member name="M:Ekstrand.MTuple`8.Equals(System.Object)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object.)
        </summary><param name="obj">The object to compare with this instance.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
        Returns a value that indicates whether the current Mutable Tuple object is equal to a specified object based on a specified comparison method.
        </summary><param name="other">The object to compare with this instance.</param><param name="comparer">An object that defines the method to use to evaluate whether the two objects are equal.</param><returns>True if the current instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.System#IComparable#CompareTo(System.Object)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="obj">An object to compare with the current instance.</param><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
    Compares the current Mutable Tuple object to a specified object by using a specified comparer, 
    and returns an integer that indicates whether the current object is before, after, 
    or in the same position as the specified object in the sort order.
    </summary><param name="other">An object to compare with the current instance.</param><param name="comparer">An object that provides custom rules for comparison.</param><returns>A signed integer that indicates the relative position of this instance and other in the sort order, as shown in the following table.  <br />
        <table>
            <tr>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Less than zero</td>
                <td>This instance precedes obj in the sort order.</td>
            </tr>
             <tr>
                <td>Zero</td>
                <td>This instance occurs in the same position in the sort order as obj.</td>
            </tr>
            <tr>
                <td>Greater than zero</td>
                <td>This instance follows obj in the sort order.</td>
            </tr>
        </table> 
    </returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.GetHashCode">
            <summary>
        Returns the hash code for the current Mutable Tuple object.)
    </summary><returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
        Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
     </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.Ekstrand#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
       Calculates the hash code for the current Mutable Tuple object by using a specified computation method.
    </summary><param name="comparer">An object whose GetHashCode method calculates the hash code of the current Mutable Tuple object.</param><returns><para>A 32-bit signed integer hash code.</para></returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.ToString">
            <summary>
        Returns a string that represents the value of this Mutable Tuple instance.
     </summary><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="M:Ekstrand.MTuple`8.Ekstrand#ITuple#ToString(System.Text.StringBuilder)">
            <summary>
         Returns a string that represents the value of this Mutable Tuple instance.
    </summary><param name="sb">StringBuilder object</param><returns>The string representation of this Mutable Tuple object.</returns>
        </member>
        <member name="P:Ekstrand.MTuple`8.Ekstrand#ITuple#Size">
            <summary>
        Return Mutable Tuple number of elements.
     </summary>
        </member>
    </members>
</doc>
